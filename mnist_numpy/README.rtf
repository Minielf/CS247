{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 I had problems dealing with delta_w and delta_b at first. I don\'92t know how to use the condition to change the probability. I analyze the shape of the parameters and go though the whole procedures step by step. Then I finally figured out how to do it in an easy way without for loop.\
\
The accuracy should increasing with the size of the steps and batch size. I use 1000 as the steps and 1 as the batch size and achieve the accuracy greater than 75%. But the accuracy is not stable, it may vary due to the sample being picked when do the SGD. \
\
Under the run function, I follow the steps shown in book, forward pass first, calculate the logits and probabilities. Then, based on the probabilities, do the backward pass, calculate the delta_w and delta_b using stochastic gradient descent and add it to itself. After this, add the delta_w and delta_b to the  w and b and use the new w and b in the next step. Based on the given accuracy_function which uses the parameters w and b to predict the classes for the test_images, comparing it to the actually labels, we can get an accuracy. }